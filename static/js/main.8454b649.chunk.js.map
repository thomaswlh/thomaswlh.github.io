{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","sourceCode","livePreview","skills","link","sort","a","b","localeCompare","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","role","resume","social","options","cursor","autoStart","onInit","tw","typeString","start","ProjectContainer","project","map","item","uniqid","Projects","id","Skills","skill","target","rel","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.8454b649.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://thomaswlh.github.io/',\n  title: 'TW.',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Thomas Wu',\n  role: 'passionate computer science student',\n  description:\n    \"I'm a passionate Computer Science student 👨‍💻 with a keen interest in Cyber Security 🔒 and AI 🤖. I love contributing to open source 🌐 and building meaningful projects that leverage new technologies to help society . When I'm not coding, I enjoy reading 📚, learning about Korean culture 🇰🇷 , and various types of sports . Feel free to connect 🤝 or check out my projects!\",\n  resume: '',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/thomaswu06/',\n    github: 'https://github.com/thomaswlh',\n  },\n}\n\n\nconst projects = [\n  {\n    name: 'Personal Portfolio',\n    description: 'A clean and modern portfolio website built with React',\n    stack: ['React', 'Material UI', 'CSS'],\n    sourceCode: 'https://github.com/thomaswlh/cleanfolio-personal-website',\n    livePreview: 'https://thomaswlh.github.io/',\n  },\n  {\n    name: 'Campus Suttle Bus MCP Server',\n    description: 'A mcp server for accessing the UM campus loop bus schedule & info',\n    stack: ['Python', 'MCP'],\n    sourceCode: 'https://github.com/thomaswlh/um-bus-mcp',\n  },\n  {\n    name: 'Visitor Monitoring & Visualization Dashboard​',\n    description: 'A computer vison project the enables real-time people counting, dwell tracking & dashboard analytics for ad/exhibit entrances.',\n    stack: ['Python', 'OpenCV', 'Norfair', 'MobileNet-SSD', 'Streamlit', 'Kivy/NiceGUI'],\n    sourceCode: 'https://github.com/thomaswlh/realtime-visitor-monitor',\n  }\n]\n\n\nconst skills = [\n  { name: 'Python', link: 'https://www.python.org/' },\n  { name: 'MCP', link: 'https://modelcontextprotocol.io/introduction' },\n  { name: 'n8n', link: 'https://n8n.io/' },\n  { name: 'SPSS', link: 'https://www.ibm.com/spss'}\n].sort((a, b) => a.name.localeCompare(b.name))\n\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'thomaswu.wlh@gmail.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport Typewriter from 'typewriter-effect';\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          <Typewriter\n            options={{\n              cursor: \"|\",\n              autoStart: true,\n            }}\n            onInit={tw => {\n              tw\n              .typeString(\n                `Hi, I am <span class=\"about__name\">${name}.</span>`\n              )\n              .start();\n            }}\n          />\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n\n\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { useContext } from 'react';\nimport { ThemeContext } from '../../contexts/theme'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\n\nconst Skills = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n  \n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill.link ? (\n              <a href={skill.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"skills__link-wrapper\">\n                {skill.name}\n              </a>\n            ) : (\n              <>{skill.name}</>\n            )}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top' aria-label='top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/rjshkhr/cleanfolio'\n      className='link footer__link'\n    >\n      Cleanfolio\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}